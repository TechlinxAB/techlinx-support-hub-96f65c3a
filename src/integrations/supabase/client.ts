
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://uaoeabhtbynyfzyfzogp.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVhb2VhYmh0YnlueWZ6eWZ6b2dwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY1MjQzNzksImV4cCI6MjA2MjEwMDM3OX0.hqJiwG2IQindO2LVBg4Rhn42FvcuZGAAzr8qDMhFBTQ";

// Simple storage provider with fallbacks
const getStorageProvider = () => {
  if (typeof localStorage === "undefined") {
    return undefined; // No storage in SSR context
  }
  
  return {
    getItem: (key) => localStorage.getItem(key),
    setItem: (key, value) => localStorage.setItem(key, value),
    removeItem: (key) => localStorage.removeItem(key),
    clear: () => {
      // Only clear Supabase-related items
      Object.keys(localStorage).forEach(key => {
        if (key.startsWith('supabase.auth.')) {
          localStorage.removeItem(key);
        }
      });
    }
  };
};

// Create Supabase client with simplified configuration
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      storage: getStorageProvider(),
      autoRefreshToken: true,
      detectSessionInUrl: true
    }
  }
);

// Function to clear auth data from local storage
export const clearAuthData = () => {
  if (typeof localStorage === "undefined") return;
  
  console.log("Clearing auth data from local storage");
  
  try {
    // Clear all Supabase auth related items from localStorage
    Object.keys(localStorage).forEach(key => {
      if (key.startsWith('supabase.auth.')) {
        localStorage.removeItem(key);
      }
    });
  } catch (error) {
    console.error('Error clearing auth data:', error);
  }
};

// Simple function to check for a valid session
export const hasValidSession = async () => {
  try {
    const { data, error } = await supabase.auth.getSession();
    return !!data.session && !error;
  } catch (err) {
    console.error("Session check failed:", err);
    return false;
  }
};
